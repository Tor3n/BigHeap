@startuml
'https://plantuml.com/object-diagram


package остановка_кроновых_Jobов{

       object cronJob{
             запуск по расписанию
       }
       object notebookService{
            +runAllParagraphs()
       }
       object notebookServer{
            +runAllParagraphs() WS событие при нажатии
            кнопки запуска всех ноутбуков в верх.панели ноутбука
       }
       object notebookRestAPI{
            вызов выполнения ноутбуков через api
       }
       object note{
            +CopyOnWriteArrayList<Paragraph> paragraphs
            __
            +|runAll()
            +|->runAllSync()
             |->if(isolated)
             |-->setting.closeInterpreters
             paragraphs.get().setinterpreter(null)

       }



       object interpreterSetting{
            +ConcurrentHashMap<String, ManagedInterpreterGroup> interpreterGroups
            __
            +closeInterpreters(ExecutinContext)
       }
       object managedInterpreterGroup{
            +close(sessionID){
            +sessions.remove(sessionID) - удаляем сессию с интерпретатором из списка сессий
            +close(sessionID) интерпретаторы удалённой сессии передаются в метод
            close(Collection<Interpreter>)
            __
            +close(Collection<Interpreter>){
            создаём close-Thread's по количеству интерпретаторов в ноутбуке.
            в каждом из потоков вызывается:

            +closeInterpreter(Interpreter)
            внутри которого мы проходимся по Job и каждый ставим в статус ABORT и вызываем
            +interpreter.close() закрывая конкретную реализацию интерпретатора

           Дожидаемся окончания работы всех close-Thread's
            __
               interpreterSetting.removeInterpreterGroup(id) удаляем объект группы интерпретаторов из настроек
                remoteInterpreterProcess.stop()
       }

       notebookServer --> notebookService
       cronJob -->note : blocking : true, isolated : true
       notebookService -->note : blocking : true, isolated : false
       notebookRestAPI -->note : blocking : {}, isolated : {} \n srv/api/notebook/job/{noteID}
       note  --> interpreterSetting #red :  дальнейшая логика выполняется только если флаг \n isolated == true
       interpreterSetting --> managedInterpreterGroup

       managedInterpreterGroup --> interpreterSetting : на обратном пути удаляем из Map interpreterGroup
}


@enduml
